// Code generated by goagen v1.2.0-dirty, DO NOT EDIT.
//
// API "websocket test": Application Contexts
//
// Command:
// $ goagen
// --design=github.com/dfree1645/goa-websocket-study/design
// --out=$(GOPATH)\src\github.com\dfree1645\goa-websocket-study
// --version=v1.2.0-dirty

package app

import (
	"context"
	"github.com/goadesign/goa"
	"net/http"
)

// ConnectWebsocketContext provides the websocket connect action context.
type ConnectWebsocketContext struct {
	context.Context
	*goa.ResponseData
	*goa.RequestData
	Room string
}

// NewConnectWebsocketContext parses the incoming request URL and body, performs validations and creates the
// context used by the websocket controller connect action.
func NewConnectWebsocketContext(ctx context.Context, r *http.Request, service *goa.Service) (*ConnectWebsocketContext, error) {
	var err error
	resp := goa.ContextResponse(ctx)
	resp.Service = service
	req := goa.ContextRequest(ctx)
	req.Request = r
	rctx := ConnectWebsocketContext{Context: ctx, ResponseData: resp, RequestData: req}
	paramRoom := req.Params["room"]
	if len(paramRoom) == 0 {
		err = goa.MergeErrors(err, goa.MissingParamError("room"))
	} else {
		rawRoom := paramRoom[0]
		rctx.Room = rawRoom
	}
	return &rctx, err
}
